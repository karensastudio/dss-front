/* MindMap component styles */

#mindmap-container {
  position: relative;
  width: 100%;
  height: calc(100vh - 200px); /* Fallback height */
  min-height: 500px;
  overflow: hidden;
}

#mindmap-svg {
  display: block;
  width: 100%;
  height: 100%;
}

/* Node styles for D3 */
.node circle {
  transition: r 0.2s ease-in-out, fill 0.2s ease-in-out, stroke-width 0.2s ease-in-out;
}

.node text {
  font-family: 'Arial', sans-serif;
  user-select: none;
}

.node text:hover {
  font-weight: 500;
}

.link {
  transition: stroke-opacity 0.2s ease-in-out;
  stroke-dasharray: 5, 5;
}

/* Hover effects */
.node:hover circle {
  filter: brightness(1.1);
}

/* Text hover for navigation */
.node text.navigate {
  cursor: pointer;
  pointer-events: all;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 150px; /* Limit text width */
}

.node text.navigate:hover {
  text-decoration: underline;
  font-weight: 500;
}

/* Tooltip styling */
.tooltip rect {
  filter: drop-shadow(0px 2px 3px rgba(0, 0, 0, 0.2));
}

.tooltip text {
  dominant-baseline: middle;
}

/* Group hover */
.node:hover .link {
  stroke-opacity: 1;
  stroke-width: 2px;
}

/* React Flow specific styles */
.react-flow__node {
  border-radius: 8px;
  padding: 0;
  min-width: 150px;
  transition: all 0.2s ease-in-out;
}

.react-flow__edge-path {
  stroke: #999;
  stroke-width: 2;
  stroke-opacity: 0.6;
  transition: all 0.2s ease-in-out;
}

.react-flow__edge-path:hover {
  stroke-width: 3;
  stroke-opacity: 0.8;
}

.react-flow__handle {
  width: 10px;
  height: 10px;
  background-color: #555;
  border: 2px solid #fff;
  box-shadow: 0 0 3px rgba(0,0,0,0.3);
}

.react-flow__controls {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  background: white;
}

.react-flow__controls-button {
  border: none;
  padding: 8px;
}

.react-flow__minimap {
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  background: #f5f5f5 !important;
  border: 1px solid #ddd;
}

/* Decision node styles */
.decision-node {
  border: 3px solid #FFD700 !important;
}

/* Animation for expanding/collapsing nodes */
.react-flow__node-transition {
  transition: all 0.3s ease;
}

/* Legend styles for React Flow */
.react-flow__legend {
  position: absolute;
  top: 10px;
  right: 10px;
  background: white;
  padding: 10px;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 10;
}

/* Edge labels */
.react-flow__edge-textbg {
  fill: white;
}

.react-flow__edge-text {
  font-size: 10px;
  font-weight: 500;
  fill: #555;
}

/* Override default styles for better visibility */
.react-flow__attribution {
  background: rgba(255, 255, 255, 0.8);
  padding: 5px;
  font-size: 10px;
}

/* Custom node styles */
.mindmap-standard-node {
  background: white;
  border: 2px solid;
  border-radius: 8px;
  padding: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease-in-out;
}

.mindmap-standard-node:hover {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  transform: translateY(-1px);
}

.mindmap-decision-node {
  background: white;
  border: 3px solid #FFD700;
  border-radius: 8px;
  padding: 10px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease-in-out;
}

.mindmap-decision-node:hover {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  transform: translateY(-1px);
}

/* Expand/collapse button styles */
.expand-collapse-button {
  background: #f5f5f5;
  border: 1px solid #ddd;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
}

.expand-collapse-button:hover {
  background: #e0e0e0;
  border-color: #bbb;
}

/* Responsive adjustments */
@media (max-height: 700px) {
  #mindmap-container {
    height: calc(100vh - 150px);
    min-height: 400px;
  }
}

/* Panel styles */
.react-flow__panel {
  margin: 8px;
}

/* Minimap node styling */
.react-flow__minimap-node {
  border: none;
  transition: all 0.2s ease-in-out;
}

/* Background grid adjustment */
.react-flow__background pattern circle {
  fill: #ddd;
}
